{"ast":null,"code":"import { GoogleLogin } from 'src/app/dtos/google-login';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/app.service\";\nexport let GoogleRedirectComponent = /*#__PURE__*/(() => {\n  class GoogleRedirectComponent {\n    constructor(route, router, appService) {\n      this.route = route;\n      this.router = router;\n      this.appService = appService;\n      this.temporary_grant = \"\";\n    }\n\n    ngOnInit() {\n      let temporaryGrant = this.route.snapshot.queryParams['code'];\n\n      if (!temporaryGrant) {\n        this.router.navigateByUrl('/login');\n      }\n\n      this.temporary_grant = temporaryGrant; // prepare the request body / dto\n\n      let dto = new GoogleLogin();\n      dto.tempGrant = temporaryGrant; // call login with google api on our backend server\n\n      this.appService.loginWithGoogel(dto).subscribe(response => {\n        if (response != null && response['token'] != null) {\n          // set the token in localstorage \n          localStorage.setItem(\"token\", response[\"token\"]); //go to profile page\n\n          this.router.navigateByUrl('/profile');\n        }\n      }, error => {\n        console.error(\"Authentication failed\");\n        this.router.navigateByUrl('/login');\n      });\n    }\n\n  }\n\n  GoogleRedirectComponent.ɵfac = function GoogleRedirectComponent_Factory(t) {\n    return new (t || GoogleRedirectComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AppService));\n  };\n\n  GoogleRedirectComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GoogleRedirectComponent,\n    selectors: [[\"app-google-redirect\"]],\n    decls: 2,\n    vars: 0,\n    template: function GoogleRedirectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtext(1, \"logging in\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  return GoogleRedirectComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}